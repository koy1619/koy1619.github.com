(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{338:function(n,e,a){"use strict";a.r(e);var t=a(1),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"mysql双主互备设计搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql双主互备设计搭建","aria-hidden":"true"}},[n._v("#")]),n._v(" mysql双主互备设计搭建")]),n._v(" "),a("p",[n._v("Master-Master复制的两台服务器，既是master，又是另一台服务器的slave。这样，任何一方所做的变更，都会通过复制应用到另外一方的数据库中。\n这样做的好很多，主要是下面几点:")]),n._v(" "),a("blockquote",[a("ul",[a("li",[n._v("可以做灾备，其中一个坏了可以切换到另一个。")]),n._v(" "),a("li",[n._v("可以做负载均衡，可以将请求分摊到其中任何一台上，提高网站吞吐量。")]),n._v(" "),a("li",[n._v("对于异地热备，尤其适合灾备。")]),n._v(" "),a("li",[n._v("...")])])]),n._v(" "),a("p",[n._v("今天在测试环境部署一套下来，简单总结一下过程以及经验\n")]),n._v(" "),a("p",[n._v("过程大致和主从配置一样,此处就不在赘述")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("按照主从配置步骤将MasterB配置成MasterA的从库\n")])])]),a("div",{staticClass:"language-flow extra-class"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[n._v("op1"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v("operation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("MASTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("A")]),n._v("\nop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v("operation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("MASTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("B")]),n._v("\nop1"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("op2\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("确保MasterB没有写入，通过show master status命令在MasterB上得到其同步点，再将MasterA配置成MasterB的从库\n")])])]),a("div",{staticClass:"language-flow extra-class"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[n._v("op1"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v("operation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("MASTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("A")]),n._v("\nop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v("operation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("MASTER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[n._v("B")]),n._v("\nop2"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("op1\n")])])]),a("p",[n._v("因为每台数据库服务器都可能在同一个表中插入数据，如果表有一个自动增长的主键，那么就会在多服务器上出现主键冲突。解决这个问题的办法就是让每个数据库的自增主键不连续。为了避免自增id冲突，一般会设置下面两个参数")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("auto-increment-increment=10\n#表示自增长字段从那个数开始，取值范围是1 .. 65535\n\nauto-increment-offset=8\n#表示自增长字段每次递增的量，其默认值是1，取值范围是1 .. 65535\n")])])]),a("p",[a("strong",[n._v("以下为48核，128G，SSD DB_SERVER的my.cnf配置")])]),n._v(" "),a("blockquote",[a("ul",[a("li",[n._v("MASTER-A")])])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[ebuy@DB1 ~]$ cat /etc/my.cnf \n[client]\nport            = 3306\nsocket          = /dbdata/mysqldata/mysql.sock\n\n\n[mysqld]\nport            = 3306\nsocket          = /dbdata/mysqldata/mysql.sock\nskip-external-locking\nkey_buffer_size = 2G\nmax_allowed_packet = 100M\ntable_open_cache = 512\nsort_buffer_size = 8M\nread_buffer_size = 20M\njoin_buffer_size = 2M\nread_rnd_buffer_size = 20M\nmyisam_sort_buffer_size = 128M\n\nthread_cache_size = 100\nquery_cache_size = 100M\nquery_cache_limit = 2M\ntmp_table_size=200M \n\n\nbasedir = /usr/local/mysql\ndatadir = /dbdata/mysqldata\n\nthread_concurrency = 6\n\nskip_name_resolve = 1\n\n\n\nlog-bin=/dbbak/binlog/mysql-bin\nexpire_logs_days = 7\nserver-id       = 8820\n\nlog_slave_updates = on\nreplicate_wild_ignore_table = mysql.%\nreplicate_wild_ignore_table = test.%\nsync_binlog = 1\n\n\nrelay-log = /dbbak/binlog/mysql-relay-bin\nrelay_log_index = /dbbak/binlog/mysql-relay-bin.index\nbinlog_format = mixed\n\n\n\n \ninnodb_data_file_path = ibdata1:1024M;ibdata2:1024M:autoextend\ninnodb_log_group_home_dir = /dbbak/binlog/\ninnodb_file_per_table = 1\ninnodb_buffer_pool_size = 96G\ninnodb_additional_mem_pool_size = 20M\ninnodb_log_file_size = 1G\ninnodb_log_buffer_size = 18M\ninnodb_flush_log_at_trx_commit = 1\ninnodb_lock_wait_timeout = 50\ninnodb_io_capacity = 800\n\ninnodb_flush_method = O_DIRECT\n\nauto-increment-increment=10\nauto-increment-offset=6\nconcurrent_insert=2\n\ndefault-time-zone       = "+8:00"\ncharacter_set_server =  utf8\n\nmax_connections = 16384\ngeneral-log = on\ngeneral_log_file = /dbbak/binlog/general.log\nslow-query-log = on\nlong_query_time = 3\nslow_query_log_file = /dbbak/binlog/slowquery_3.log\nlog-queries-not-using-indexes = true\nmax_connect_errors = 100000\n\n[mysqldump]\nquick\nmax_allowed_packet = 50M\n\n[mysql]\nno-auto-rehash\n\n[myisamchk]\nkey_buffer_size = 256M\nsort_buffer_size = 256M\nread_buffer = 2M\nwrite_buffer = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n[ebuy@DB1 ~]$ \n')])])]),a("blockquote",[a("ul",[a("li",[n._v("MASTER-B")])])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[ebuy@DB2 ~]$ cat /etc/my.cnf \n[client]\nport            = 3306\nsocket          = /dbdata/mysqldata/mysql.sock\n\n\n[mysqld]\nport            = 3306\nsocket          = /dbdata/mysqldata/mysql.sock\nskip-external-locking\nkey_buffer_size = 2G\nmax_allowed_packet = 100M\ntable_open_cache = 512\nsort_buffer_size = 8M\nread_buffer_size = 20M\njoin_buffer_size = 2M\nread_rnd_buffer_size = 20M\nmyisam_sort_buffer_size = 128M\n\nthread_cache_size = 100\nquery_cache_size = 100M\nquery_cache_limit = 2M\ntmp_table_size=200M \n\n\nbasedir = /usr/local/mysql\ndatadir = /dbdata/mysqldata\n\nthread_concurrency = 6\n\nskip_name_resolve = 1\n\n\n\nlog-bin=/dbbak/binlog/mysql-bin\nexpire_logs_days = 7\nserver-id       = 8821\n\nlog_slave_updates = on\nreplicate_wild_ignore_table = mysql.%\nreplicate_wild_ignore_table = test.%\nsync_binlog = 1\n\n\nrelay-log = /dbbak/binlog/mysql-relay-bin\nrelay_log_index = /dbbak/binlog/mysql-relay-bin.index\nbinlog_format = mixed\n\n\n\n \ninnodb_data_file_path = ibdata1:1024M;ibdata2:1024M:autoextend\ninnodb_log_group_home_dir = /dbbak/binlog/\ninnodb_file_per_table = 1\ninnodb_buffer_pool_size = 96G\ninnodb_additional_mem_pool_size = 20M\ninnodb_log_file_size = 1G\ninnodb_log_buffer_size = 18M\ninnodb_flush_log_at_trx_commit = 1\ninnodb_lock_wait_timeout = 50\ninnodb_io_capacity = 800\n\ninnodb_flush_method = O_DIRECT\n\nauto-increment-increment=10\nauto-increment-offset=8\nconcurrent_insert=2\n\ndefault-time-zone       = "+8:00"\ncharacter_set_server =  utf8\n\nmax_connections = 16384\ngeneral-log = on\ngeneral_log_file = /dbbak/binlog/general.log\nslow-query-log = on\nlong_query_time = 3\nslow_query_log_file = /dbbak/binlog/slowquery_3.log\nlog-queries-not-using-indexes = true\nmax_connect_errors = 100000\n\n[mysqldump]\nquick\nmax_allowed_packet = 50M\n\n[mysql]\nno-auto-rehash\n\n[myisamchk]\nkey_buffer_size = 256M\nsort_buffer_size = 256M\nread_buffer = 2M\nwrite_buffer = 2M\n\n[mysqlhotcopy]\ninteractive-timeout\n[ebuy@DB2 ~]$ \n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);