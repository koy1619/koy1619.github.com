(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{419:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-常用命令整理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令整理","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 常用命令整理")]),t._v(" "),a("p",[t._v("##初始化配置")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置使用git仓库的人员姓名  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name Comes Here"')]),t._v("  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置使用git仓库的人员email  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email you@yourdomain.example.com  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置到缓存 默认15分钟  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global credential.helper cache   \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改缓存时间  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global credential.helper "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cache --timeout=3600'")]),t._v("    \n  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global color.ui "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.co checkout  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.ci commit  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.st status  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.br branch  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.editor "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mate -w"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置Editor使用textmate  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config -1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#列举所有配置  ")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用户的git配置文件~/.gitconfig  ")]),t._v("\n")])])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("##查看、添加、提交、删除、找回，重置修改文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示command的help  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某次提交的内容  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v("  \n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co  -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抛弃工作区修改  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抛弃工作区修改  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将工作文件修改提交到本地暂存区  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将所有修改过的工作文件提交暂存区  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从版本库中删除文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --cached  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从版本库中删除文件，但不删除文件  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从暂存区恢复到工作文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -- "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从暂存区恢复到工作文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci -a           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将git add, git rm和git ci等操作都合并在一起做  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci -am "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"some comments"')]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ci --amend      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改最后一次提交记录  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复某次提交的状态，恢复动作本身也创建了一次提交对象  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复最后一次提交的状态  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##查看文件diff")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较当前文件和暂存区文件差异  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较两次提交之间的差异  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在两个分支之间比较  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --staged   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较暂存区和版本库差异  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --stat     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅仅比较统计信息  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##查看提交记录")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看该文件每次提交记录  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看每次详细修改内容的diff  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p -2       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看最近两次详细修改内容的diff  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --stat      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看提交统计信息  ")]),t._v("\n")])])]),a("p",[t._v("tig\nMac上可以使用tig代替diff和log，brew install tig")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("##取得Git仓库")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始化一个版本仓库  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Clone远程版本库  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@xbc.me:wordpress.git  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加远程版本库origin，语法为 git remote add [shortname] [url]  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@xbc.me:wordpress.git  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看远程仓库  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v  \n")])])]),a("hr"),t._v(" "),a("p",[t._v("##提交你的修改")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加当前修改的文件到暂存区  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交你的修改  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit –m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你的注释"')]),t._v("  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#推送你的更新到远程服务器,语法为 git push [远程名] [本地分支]:[远程分支]  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看文件状态  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#跟踪新文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从当前跟踪列表移除文件，并完全删除  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" readme.txt  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仅在暂存区删除，保留文件在当前目录，不再跟踪  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" –cached readme.txt  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重命名文件  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" reademe.txt readme  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看提交的历史记录  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改最后一次提交注释的，利用–amend参数  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忘记提交某些修改，下面的三条命令只会得到一个提交。  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit –m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("quot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme.txt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("quot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" readme_forgotten  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit –amend  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#假设你已经使用git add .，将修改过的文件a、b加到暂存区  ")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#现在你只想提交a文件，不想提交b文件，应该这样  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD b  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#取消对文件的修改  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout –- readme.txt  \n")])])]),a("hr"),t._v(" "),a("p",[t._v("##查看、切换、创建和删除分支")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -r           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新的分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -v           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看各个分支最后提交信息  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br --merged     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已经被合并到当前分支的分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br --no-merged  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看尚未被合并到当前分支的分支  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到某个分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建新的分支，并且切换过去  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于branch创建新的new_branch  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v(" -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把某次历史提交记录checkout出来，创建成一个分支  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除某个分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" br -D "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除某个分支 (未被合并的分支被删除的时候需要强制)  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##分支合并和rebase")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将branch分支合并到当前分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master --no-ff  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不要Fast-Foward合并，这样可以生成merge提交  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将master rebase到branch，相当于：  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  \n")])])]),a("hr"),t._v(" "),a("p",[t._v("##Git补丁管理(方便在多台机器上开发同步时用)")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/sync.patch         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成补丁  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" apply "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/sync.patch          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打补丁  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" apply --check "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/sync.patch  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试补丁能否成功  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##Git暂存管理")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂存  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列所有stash  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复暂存的内容  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除暂存区  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##Git远程分支管理")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抓取远程仓库所有分支更新并合并到本地  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --no-ff                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抓取远程仓库所有分支更新并合并到本地，不要快进合并  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 抓取远程仓库更新  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将远程主分支合并到本地当前分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co --track origin/branch     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跟踪某个远程分支创建相应的本地分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" co -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于远程分支创建本地分支，功能同上  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push所有分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地主分支推到远程主分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建远程分支， origin是远程仓库名  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("local_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建远程分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote_branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#先删除本地分支(git br -d <branch>)，然后再push删除远程分支  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##基本的分支管理")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建一个分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch iss53  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#切换工作目录到iss53  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" chekcout iss53  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将上面的命令合在一起，创建iss53分支并切换到iss53  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" chekcout –b iss53  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#合并iss53分支，当前工作目录为master  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge iss53  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#合并完成后，没有出现冲突，删除iss53分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch –d iss53  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#拉去远程仓库的数据，语法为 git fetch [remote-name]  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fetch 会拉去最新的远程仓库数据，但不会自动到当前目录下，要自动合并  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看远程仓库的信息  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin  \n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#建立本地的dev分支追踪远程仓库的develop分支  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout –b dev origin/develop  \n")])])]),a("hr"),t._v(" "),a("p",[t._v("##Git远程仓库管理")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程服务器地址和仓库名称  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程服务器仓库状态  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@ github:robbin/robbin_site.git         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程仓库地址  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin git@ github.com:robbin/robbin_site.git "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置远程仓库地址(用于修改远程仓库地址)  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程仓库  ")]),t._v("\n")])])]),a("hr"),t._v(" "),a("p",[t._v("##创建远程仓库")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --bare robbin_site robbin_site.git  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用带版本的项目创建纯版本仓库  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -r my_project.git git@ git.csdn.net:~      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将纯仓库上传到服务器上  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" robbin_site.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" robbin_site.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" --bare init "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在服务器创建纯仓库  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@ github.com:robbin/robbin_site.git    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置远程仓库地址  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master                                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 客户端首次提交  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin develop  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 首次将本地develop分支提交到远程develop分支，并且track  ")]),t._v("\n   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-head origin master   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置远程仓库的HEAD指向master分支  ")]),t._v("\n")])])]),a("p",[t._v("也可以命令设置跟踪远程库和本地库")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream master origin/master  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream develop origin/develop  \n")])])]),a("hr"),t._v(" "),a("p",[t._v("##Github协同流程：")]),t._v(" "),a("p",[t._v("fork给自己 → clone到本地 → coding → push回自己 → github上提出Pull Request即可\n之后，本地添加fork源为远端源 → 工作前先pull下fork源保持代码较新 → coding → ...")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("参考:")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://git-scm.com/book/zh/v1",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://git-scm.com/book/zh/v1"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);